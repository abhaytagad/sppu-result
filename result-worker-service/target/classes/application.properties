spring.application.name=result-worker-service
server.port={$PORT:8082}


# spring.kafka.bootstrap-servers=localhost:9092
# spring.kafka.consumer.group-id=result-group
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# spring.data.redis.port=6379
# spring.data.redis.host=localhost

# # Use custom target type instead of relying on Kafka type headers
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.json.value.default.type=com.example.result_worker_service.model.ResultRequest
# spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Kafka Bootstrap Server
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Consumer configuration
spring.kafka.consumer.group-id=result-worker
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
